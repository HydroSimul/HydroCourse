[{"path":"https://hydrosimul.github.io/HydroCourse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kan Lei. Maintainer.","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lei K (2023). HydroCourse: Package (Title Case). https://github.com/LuckyKanLei/EDCHM, https://luckykanlei.github.io/EDCHM/, https://hydrosimul.github.io/HydroCourse/.","code":"@Manual{,   title = {HydroCourse: What the Package Does (Title Case)},   author = {Kan Lei},   year = {2023},   note = {https://github.com/LuckyKanLei/EDCHM, https://luckykanlei.github.io/EDCHM/, https://hydrosimul.github.io/HydroCourse/}, }"},{"path":[]},{"path":"https://hydrosimul.github.io/HydroCourse/reference/HydroCourse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A Brief Introduction to HydroCourse — HydroCourse-package","title":"A Brief Introduction to HydroCourse — HydroCourse-package","text":"package gather functions demonstration data utilized Ruhr-Universität Bochum course chair Engineering hydrology Water management.","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/HydroCourse-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Brief Introduction to HydroCourse — HydroCourse-package","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/cali.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate algorithms — cali","title":"Calibrate algorithms — cali","text":"Calibrate algorithms","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/cali.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate algorithms — cali","text":"","code":"cali_DDS(fitness, x_Min, x_Max, x_Init = NA, max_iter = 100, r = 0.2, ...)  cali_UVS(   fitness,   x_Min,   x_Max,   x_Init = NA,   max_n_loop = 10,   n_1_search = 8,   ... )"},{"path":"https://hydrosimul.github.io/HydroCourse/reference/cali.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate algorithms — cali","text":"fitness fitness function x_Min, x_Max, x_Init minimal, maximal initial parameter max_iter maximal number iteration r parameter algorithm ... parameters max_n_loop maximal number loops n_1_search maximal number one loop","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/cali.html","id":"dds-","dir":"Reference","previous_headings":"","what":"DDS","title":"Calibrate algorithms — cali","text":"dynamically dimensioned search (DDS) calibration algorithm","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/cali.html","id":"uvs","dir":"Reference","previous_headings":"","what":"UVS","title":"Calibrate algorithms — cali","text":"Univariable search algorithmus","code":""},{"path":[]},{"path":"https://hydrosimul.github.io/HydroCourse/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydrological models — model","text":"","code":"model_linearReservoir(Q_In, Q_Out0 = 0, param_K = 1)"},{"path":"https://hydrosimul.github.io/HydroCourse/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydrological models — model","text":"Q_In (vector) Inflow Boundary condition (Forcing) data Q_Out0 (num) Innitial condition, Outflow first timepoint, DEFAULT 0 param_K (num) Parameter K linear reservoir method","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydrological models — model","text":"Outflow (vector)","code":""},{"path":"https://hydrosimul.github.io/HydroCourse/reference/model.html","id":"linear-reservoir","dir":"Reference","previous_headings":"","what":"Linear Reservoir","title":"Hydrological models — model","text":"Linear Reservoir method just assuming watershed behaves like linear reservoir, outflow proportional water storage within reservoir. \\[Q_{} = \\frac{1}{K}S(t)\\] addition relationship output storage, linear reservoir models also adhere continuity equation, often referred water balance equation. \\[\\frac{\\mathrm{d}S(t)}{\\mathrm{d}t} = Q_{} - Q_{}\\] combining equations, obtain differential equation (DGL). \\[Q_{} = Q_{} + K\\frac{\\mathrm{d}Q_{}(t)}{\\mathrm{d}t}\\] \\[Q_{}(t)=\\int_{\\tau=t0}^{t}Q_{}(\\tau)\\frac{1}{K}e^{-\\frac{t-\\tau}{K}}\\mathrm{d}\\tau + Q_{}(t_0)\\frac{1}{K}e^{-\\frac{t-t0}{K}}\\] : \\(Q_{}\\) inflow reservoir \\(Q_{}\\) outflow reservoir \\(S\\) storage reservoir \\(K\\) parameter defines relationship $Q_out$ $S$","code":""}]
